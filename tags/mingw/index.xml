<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mingw on 程序猿的小本本</title>
    <link>http://www.gsymy.com/tags/mingw/</link>
    <description>Recent content in Mingw on 程序猿的小本本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>chennqqi@qq.com (chennqqi)</managingEditor>
    <webMaster>chennqqi@qq.com (chennqqi)</webMaster>
    <copyright>(c) 2016 gsymy.com.</copyright>
    <lastBuildDate>Sun, 16 Jul 2017 10:13:13 +0800</lastBuildDate>
    
	<atom:link href="http://www.gsymy.com/tags/mingw/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VC MINGW dll lib 转换</title>
      <link>http://www.gsymy.com/2017/07/16/vc_mingw_convert.html</link>
      <pubDate>Sun, 16 Jul 2017 10:13:13 +0800</pubDate>
      <author>chennqqi@qq.com (chennqqi)</author>
      <guid>http://www.gsymy.com/2017/07/16/vc_mingw_convert.html</guid>
      <description>VC MINGW dll lib 相互转换  VC XX.lib -&amp;gt; MINGW libXX.a
reimp XX.lib  reimp 是mingw自带的工具，位于mingw/mingw-utils-0.x/目录下
 VC XX.dll -&amp;gt; VC XX.lib
pexports XX.dll &amp;gt; XX.def lib /machine:i386 /def:XX.def  pexports是mingw的gnu工具
下载地址: https://sourceforge.net/projects/mingw/files/MinGW/Extension/pexports/
或者通过 mingw-get install pexports安装
lib 是vc编译工具，安装vs系列环境后就有
/machine 参数决定生成32位还是64位程序，详细请自行查看相关帮助
注:此处生成的lib文件MINGW也可以使用
 VC XX.dll -&amp;gt; mingw libXX.a
pexports XX.dll &amp;gt; XX.def dlltool --dllname XX.dll --def XX.def --output-lib libXX.a  dlltool是mingw自带工具
 MINGW libXX.a -&amp;gt; mingw XX.dll
ar x libXX.</description>
    </item>
    
    <item>
      <title>mingw32 编译器遇到的一些问题</title>
      <link>http://www.gsymy.com/2016/09/18/mingw32_errors.html</link>
      <pubDate>Sun, 18 Sep 2016 16:30:17 +0800</pubDate>
      <author>chennqqi@qq.com (chennqqi)</author>
      <guid>http://www.gsymy.com/2016/09/18/mingw32_errors.html</guid>
      <description>#使用mingw32 移植项目时遇到的一些问题
原创文章转载请注明出处！
 mingw32 &amp;lsquo;typeof&amp;rsquo;
typeof 是GCC扩展的特性，所以要求编译器支持GCC特性，在GCC编译选项中加入`-std=gnu99` -std=c99 -&amp;gt; -std=gnu99  mingw &amp;lsquo;unamed union&amp;rsquo;
无名联合体，例如 struct sss{ union{ int a; char b; } double c; }; gcc支持无名联合体需要开启以下选项 `-fms-extensions` 注：有些高版本的GCC编译器可能默认自带了此选项，也有可能去掉；详细可能需要自己研究gcc标准；  mingw &amp;lsquo;for&amp;rsquo;
sample code: `for (int i=0; i&amp;lt;10; i++) {}` 以上代码在C++编译器下无任何问题，在C编译中需要C99以上特性 在编译选项中加入`-std=c99` 或者`-std=gnu99` 前者兼容标准C99，后者支持gnu扩展C99 -std=c99 / -std=gnu99  mingw &amp;lsquo;GetFileSizeEx&amp;rsquo;
这个函数是windows函数要求 windows&amp;gt;=XP(windows&amp;gt;=Server2003) 通常链接是加入kernel.lib即可   </description>
    </item>
    
  </channel>
</rss>